"""message to user_update_kyc

Revision ID: 187bd948ff38
Revises: 
Create Date: 2024-09-03 11:59:39.632360

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '187bd948ff38'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=61), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('login_token', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_beneficiary_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_countries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('shortName', sa.String(length=100), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('phoneCode', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.Column('currencySymbol', sa.String(length=100), nullable=True),
    sa.Column('currencyCode', sa.String(length=100), nullable=True),
    sa.Column('zipcodeLength', sa.Integer(), nullable=True),
    sa.Column('allowNumAndCharInZipcode', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('currency_name', sa.String(length=100), nullable=True),
    sa.Column('flag', sa.String(length=100), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_kyc_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_locations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('stateId', sa.Integer(), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_occupations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_otp_configarations',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('beneficiary', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_reminder_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_states',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('mapName', sa.String(length=100), nullable=True),
    sa.Column('countryId', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_task_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_tenant_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_timezones',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('zone', sa.String(length=55), nullable=True),
    sa.Column('name', sa.String(length=55), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('md_user_roles',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_md_user_roles_name'), 'md_user_roles', ['name'], unique=False)
    op.create_table('md_user_status',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenants',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tickets_user_id'), 'tickets', ['user_id'], unique=False)
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ref_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('catrgory', sa.String(length=150), nullable=False),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=True),
    sa.Column('last_name', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=150), nullable=True),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('token', sa.Text(), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=False),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('login_fail_count', sa.Integer(), nullable=True, comment='User Login Fail count'),
    sa.Column('login_attempt_date', sa.DateTime(), nullable=True, comment='Last Login Attempt date'),
    sa.Column('otp', sa.String(length=61), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('state_id', sa.Integer(), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.Column('kyc_status_id', sa.Integer(), nullable=False),
    sa.Column('accepted_terms', sa.Boolean(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['kyc_status_id'], ['md_kyc_status.id'], ),
    sa.ForeignKeyConstraint(['location_id'], ['md_locations.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['md_user_roles.id'], ),
    sa.ForeignKeyConstraint(['state_id'], ['md_states.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_user_status.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_location_id'), 'users', ['location_id'], unique=False)
    op.create_index(op.f('ix_users_tenant_id'), 'users', ['tenant_id'], unique=False)
    op.create_table('admin_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('admin_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_notificatuions_admin_id'), 'admin_notificatuions', ['admin_id'], unique=False)
    op.create_index(op.f('ix_admin_notificatuions_user_id'), 'admin_notificatuions', ['user_id'], unique=False)
    op.create_table('beneficiaries',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(length=50), nullable=True),
    sa.Column('short_name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=161), nullable=True),
    sa.Column('mobile_no', sa.String(length=15), nullable=True),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('city', sa.String(length=50), nullable=True),
    sa.Column('state_province', sa.String(length=50), nullable=True),
    sa.Column('postal_code', sa.String(length=50), nullable=True),
    sa.Column('swift_code', sa.String(length=15), nullable=True),
    sa.Column('iban', sa.String(length=15), nullable=True),
    sa.Column('bank_name', sa.String(length=50), nullable=True),
    sa.Column('bank_country_id', sa.Integer(), nullable=False),
    sa.Column('bank_address', sa.String(length=1500), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['bank_country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['country_id'], ['md_countries.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['md_beneficiary_status.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_beneficiaries_city'), 'beneficiaries', ['city'], unique=False)
    op.create_index(op.f('ix_beneficiaries_full_name'), 'beneficiaries', ['full_name'], unique=False)
    op.create_index(op.f('ix_beneficiaries_user_id'), 'beneficiaries', ['user_id'], unique=False)
    op.create_table('user_detais',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('street', sa.Text(), nullable=True),
    sa.Column('city', sa.Text(), nullable=True),
    sa.Column('state', sa.Text(), nullable=True),
    sa.Column('pincode', sa.String(length=50), nullable=True),
    sa.Column('occupation', sa.String(length=50), nullable=True),
    sa.Column('annual_income', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_detais_user_id'), 'user_detais', ['user_id'], unique=True)
    op.create_table('user_notificatuions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('ref_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_notificatuions_user_id'), 'user_notificatuions', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_notificatuions_user_id'), table_name='user_notificatuions')
    op.drop_table('user_notificatuions')
    op.drop_index(op.f('ix_user_detais_user_id'), table_name='user_detais')
    op.drop_table('user_detais')
    op.drop_index(op.f('ix_beneficiaries_user_id'), table_name='beneficiaries')
    op.drop_index(op.f('ix_beneficiaries_full_name'), table_name='beneficiaries')
    op.drop_index(op.f('ix_beneficiaries_city'), table_name='beneficiaries')
    op.drop_table('beneficiaries')
    op.drop_index(op.f('ix_admin_notificatuions_user_id'), table_name='admin_notificatuions')
    op.drop_index(op.f('ix_admin_notificatuions_admin_id'), table_name='admin_notificatuions')
    op.drop_table('admin_notificatuions')
    op.drop_index(op.f('ix_users_tenant_id'), table_name='users')
    op.drop_index(op.f('ix_users_location_id'), table_name='users')
    op.drop_table('users')
    op.drop_table('tokens')
    op.drop_index(op.f('ix_tickets_user_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_table('tenants')
    op.drop_table('md_user_status')
    op.drop_index(op.f('ix_md_user_roles_name'), table_name='md_user_roles')
    op.drop_table('md_user_roles')
    op.drop_table('md_timezones')
    op.drop_table('md_tenant_status')
    op.drop_table('md_task_status')
    op.drop_table('md_states')
    op.drop_table('md_reminder_status')
    op.drop_table('md_otp_configarations')
    op.drop_table('md_occupations')
    op.drop_table('md_locations')
    op.drop_table('md_kyc_status')
    op.drop_table('md_countries')
    op.drop_table('md_beneficiary_status')
    op.drop_table('admin')
    # ### end Alembic commands ###
